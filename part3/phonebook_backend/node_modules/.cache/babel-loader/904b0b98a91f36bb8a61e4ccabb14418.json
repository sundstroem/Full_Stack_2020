{"ast":null,"code":"var _jsxFileName = \"/Users/anderssundstrom/Full_Stack/part2/puhelinluettelo/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Notification from './Notification';\nimport contactService from './services/contacts';\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [search, setSearch] = useState('');\n  const [notification, setNotification] = useState('');\n  const [errorStatus, setErrorStatus] = useState(false);\n  useEffect(() => {\n    contactService.getAll().then(r => {\n      setPersons(r.data);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.some(l => l.name === newName)) {\n      if (window.confirm(`${newName} is already in the phonebook, do you want to replace the current number?`)) {\n        const id = persons.find(l => l.name === newName).id;\n        const updatedObject = {\n          name: newName,\n          number: newNumber\n        };\n        console.log(\"updated object:\", updatedObject, \"id: \", id);\n        contactService.update(updatedObject, id).then(response => {\n          setPersons(persons.filter(p => p.name !== newName).concat(updatedObject));\n          setNotification(`Updated the number of ${newName}`);\n          eraseNotificationAfterDelay();\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    } else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      };\n      contactService.create(nameObject).then(response => {\n        setPersons(persons.concat(response.data));\n        setNotification(`Added the number of ${newName} to the Phonebook`);\n        eraseNotificationAfterDelay();\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const eraseNotificationAfterDelay = () => {\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const deleteContact = person => {\n    if (window.confirm(`Do you want to delete ${person.name} from the phonebook?`)) {\n      setPersons(persons.filter(p => p.id !== person.id));\n      setNotification(`Deleted ${person.name} from the Phonebook`);\n      eraseNotificationAfterDelay();\n      contactService.deletePerson(person.id);\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value.toLowerCase());\n    if (search.isEmpty) setShowAll(true);else setShowAll(false);\n  };\n\n  const personsToShow = showAll ? persons : persons.filter(l => l.name.toLowerCase().includes(search));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: notification,\n    isError: errorStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), \"filter shown with\", /*#__PURE__*/React.createElement(Filter, {\n    search: search,\n    handleSearchChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    addPerson: addPerson,\n    newName: newName,\n    handleNameChange: handleNameChange,\n    newNumber: newNumber,\n    handleNumberChange: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Persons, {\n    personsToShow: personsToShow,\n    deleteContact: deleteContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/anderssundstrom/Full_Stack/part2/puhelinluettelo/src/components/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","Notification","contactService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","search","setSearch","notification","setNotification","errorStatus","setErrorStatus","getAll","then","r","data","addPerson","event","preventDefault","some","l","name","window","confirm","id","find","updatedObject","number","console","log","update","response","filter","p","concat","eraseNotificationAfterDelay","nameObject","create","setTimeout","deleteContact","person","deletePerson","handleNameChange","target","value","handleNumberChange","handleSearchChange","toLowerCase","isEmpty","personsToShow","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport contactService from './services/contacts'\nimport './index.css'\n\nconst App = () => {\n  \n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ search, setSearch] = useState('')\n  const [ notification, setNotification] = useState('')\n  const [ errorStatus, setErrorStatus] = useState(false)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(r => {\n        setPersons(r.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      \n      if(persons.some(l => l.name === newName)) {\n        if(window.confirm(`${newName} is already in the phonebook, do you want to replace the current number?`)) {\n          const id = persons.find(l => l.name === newName).id\n          const updatedObject = { name: newName, number: newNumber}\n          console.log(\"updated object:\", updatedObject, \"id: \", id)\n          contactService\n            .update(updatedObject, id)\n            .then(response => {\n              setPersons(persons.filter(p => p.name !== newName).concat(updatedObject))\n              setNotification(`Updated the number of ${newName}`)\n              eraseNotificationAfterDelay()\n              setNewName('')\n              setNewNumber('')\n            })\n\n        }\n      }\n      else {\n        const nameObject = { name: newName, number: newNumber}\n        contactService\n          .create(nameObject)\n          .then(response => {\n            setPersons(persons.concat(response.data))\n            setNotification(`Added the number of ${newName} to the Phonebook`)\n            eraseNotificationAfterDelay()\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n  }\n  \n  const eraseNotificationAfterDelay = () => {\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n  const deleteContact = (person) => {\n    if(window.confirm(`Do you want to delete ${person.name} from the phonebook?`)) {\n      setPersons(persons.filter(p => p.id !== person.id))\n      setNotification(`Deleted ${person.name} from the Phonebook`)\n      eraseNotificationAfterDelay()\n      contactService.deletePerson(person.id)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value.toLowerCase())\n    if (search.isEmpty) setShowAll(true)\n    else setShowAll(false)\n  } \n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(l => l.name.toLowerCase().includes(search))\n \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} isError={errorStatus} />\n      filter shown with\n      <Filter search = {search} handleSearchChange = {handleSearchChange} /> \n      <h2>Add a new</h2>\n      <PersonForm addPerson = {addPerson} newName = {newName} handleNameChange = {handleNameChange} \n                  newNumber = {newNumber} handleNumberChange = {handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons personsToShow = {personsToShow} deleteContact = {deleteContact}/>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}